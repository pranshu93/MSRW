# Script to get windowed radar data, generated by:
# https://github.com/dhruboroy29/MATLAB_Scripts/blob/neel/Scripts/extract_target_windows.m

import os
import glob
import pandas
import numpy as np
import argparse

np.random.seed(42)

# Shuffle
def unison_shuffled_copies(a, b):
    assert len(a) == len(b)
    p = np.random.permutation(len(a))
    return a[p], b[p]


def ReadOneWindow(filepath):
    assert os.path.splitext(filepath)[1] == '.data' or os.path.splitext(filepath)[1] == '.bbs'
    return np.fromfile(filepath, dtype=np.uint16)
    #return np.reshape(comp, (-1, 2))


data_dir = '/mnt/6b93b438-a3d4-40d2-9f3d-d8cdbb850183/Research/Robust_Learning/Data_Repository/Targets_balanced'
label_dir = '/mnt/6b93b438-a3d4-40d2-9f3d-d8cdbb850183/Research/Robust_Learning/IIITDemo/Arff/Roy.174'
winlens = [256, 384, 512]
type = 'bb_regtest'
y_dim = 16 # Regression output dimension
tvt_indices = {'train': '1', 'val': '2', 'test': '3'}

for win in winlens:
    for data in tvt_indices.keys():
        print('Processing data (X) file:', 'bb_3class_winlen_' + str(win) + '_winindex_all_' + data)
        # Process data
        data_path = os.path.join(data_dir, 'bb_3class_winlen_' + str(win) + '_winindex_all',
                                 'bb_3class_winlen_' + str(win) + '_winindex_all_' + data)
        file_order = os.path.join(label_dir, 'file_order_radar' + str(win) + tvt_indices[data] + '.txt')

        with open(file_order) as f:
            instances = [ReadOneWindow(glob.glob(os.path.join(data_path, '*', line[:-1]+'.data'))[0]) for line in f.readlines()]

        X = np.array(instances)

        # Process labels
        label_file = os.path.join(label_dir, 'radar' + str(win) + '_' + data + '_64_features.csv')
        print('Processing regression (y) file:', os.path.basename(label_file))
        df = pandas.read_csv(label_file)
        # Drop last (class label) column
        df = df.iloc[:, :y_dim]
        # Handle ? in data
        df.replace(to_replace='?', value=0, inplace=True)

        # Convert to npy array
        y = df.to_numpy(dtype='float')

        # Randomize data
        X, y = unison_shuffled_copies(X, y)

        print('Data shape:', X.shape)
        print('Label shape:', y.shape)

        print('Saving regression data...')
        out_dir = os.path.dirname(data_path)
        np.save(os.path.join(out_dir, type + '_winlen_' + str(win) + '_' + data +'.npy'), X)
        np.save(os.path.join(out_dir, type + '_winlen_' + str(win) + '_' + data +'_lbls.npy'), y)
        print('---------------------------------')

print('\nAll done!')